#!/bin/bash
set -euo pipefail

## === MODULE 03: Nginx Installation & Configuration ===

echo "üåê Setting up Nginx web server..."

# Check if running with sudo privileges
if [[ $EUID -ne 0 ]] && ! sudo -n true 2>/dev/null; then
    echo "‚ùå This script requires sudo privileges"
    exit 1
fi

# Function to run commands with proper privileges
run_cmd() {
    if [[ $EUID -eq 0 ]]; then
        "$@"
    else
        sudo "$@"
    fi
}

# Check if nginx is already installed
if command -v nginx &>/dev/null; then
    echo "‚úÖ Nginx already installed: $(nginx -v 2>&1)"
    
    # Check if it's running
    if systemctl is-active --quiet nginx; then
        echo "‚úÖ Nginx is running"
    else
        echo "üîÑ Starting Nginx..."
        run_cmd systemctl start nginx
        run_cmd systemctl enable nginx
        echo "‚úÖ Nginx started and enabled"
    fi
else
    echo "üì¶ Installing Nginx..."
    run_cmd apt update
    run_cmd apt install -y nginx
    
    echo "üîÑ Starting and enabling Nginx..."
    run_cmd systemctl enable nginx
    run_cmd systemctl start nginx
    
    # Wait for nginx to start and verify
    sleep 2
    if ! systemctl is-active --quiet nginx; then
        echo "‚ùå Nginx failed to start properly"
        exit 1
    fi
    echo "‚úÖ Nginx installed and started"
fi

# Configure firewall for HTTP and HTTPS
echo "üî• Configuring firewall for web traffic..."
if command -v ufw &>/dev/null; then
    run_cmd ufw allow 'Nginx Full'
    echo "‚úÖ UFW configured for Nginx (HTTP/HTTPS)"
else
    echo "‚ö†Ô∏è  UFW not found, skipping firewall configuration"
fi

# Create a basic index page if default is still present
NGINX_ROOT="/var/www/html"
INDEX_FILE="$NGINX_ROOT/index.nginx-debian.html"

if [[ -f "$INDEX_FILE" ]]; then
    echo "üè† Creating custom welcome page..."
    if [[ $EUID -eq 0 ]]; then
        cat > "$NGINX_ROOT/index.html" << 'EOF'
    else
        sudo tee "$NGINX_ROOT/index.html" > /dev/null << 'EOF'
    fi
<!DOCTYPE html>
<html>
<head>
    <title>Welcome to Ubuntu Server</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            line-height: 1.6;
            color: #333;
        }
        .header {
            text-align: center;
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }
        .status {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
        }
        .info {
            background: #f8f9fa;
            border-left: 4px solid #007bff;
            padding: 15px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üöÄ Ubuntu Server Setup Complete</h1>
        <p>Your web server is up and running!</p>
    </div>
    
    <div class="status">
        <strong>‚úÖ Status:</strong> Nginx is successfully installed and running
    </div>
    
    <div class="info">
        <h3>üìÅ Document Root</h3>
        <p>Your web files should be placed in: <code>/var/www/html/</code></p>
        
        <h3>‚öôÔ∏è Configuration</h3>
        <p>Nginx configuration files are located in: <code>/etc/nginx/</code></p>
        
        <h3>üîß Common Commands</h3>
        <ul>
            <li><code>sudo systemctl restart nginx</code> - Restart Nginx</li>
            <li><code>sudo systemctl reload nginx</code> - Reload configuration</li>
            <li><code>sudo nginx -t</code> - Test configuration</li>
        </ul>
    </div>
    
    <p style="text-align: center; margin-top: 40px; color: #6c757d;">
        <small>Generated by Ubuntu Setup Scripts</small>
    </p>
</body>
</html>
EOF
    
    # Remove the default Debian page
    run_cmd rm -f "$INDEX_FILE"
    echo "‚úÖ Custom welcome page created"
fi

# Set proper permissions for web directory
echo "üîí Setting proper permissions..."
run_cmd chown -R www-data:www-data "$NGINX_ROOT"
run_cmd chmod -R 755 "$NGINX_ROOT"

# Add user to www-data group if SETUP_USERNAME is set
if [[ -n "${SETUP_USERNAME:-}" ]]; then
    if id "$SETUP_USERNAME" &>/dev/null; then
        if ! groups "$SETUP_USERNAME" | grep -q www-data; then
            run_cmd usermod -aG www-data "$SETUP_USERNAME"
            echo "‚úÖ User '$SETUP_USERNAME' added to www-data group"
        else
            echo "‚úÖ User '$SETUP_USERNAME' already in www-data group"
        fi
    fi
fi

# Create a basic server block template
SITES_AVAILABLE="/etc/nginx/sites-available"
TEMPLATE_FILE="$SITES_AVAILABLE/template"

if [[ ! -f "$TEMPLATE_FILE" ]]; then
    echo "üìù Creating server block template..."
    if [[ $EUID -eq 0 ]]; then
        cat > "$TEMPLATE_FILE" << 'EOF'
    else
        sudo tee "$TEMPLATE_FILE" > /dev/null << 'EOF'
    fi
# Example server block for a new site
# Copy this file and modify as needed
# Enable with: sudo ln -s /etc/nginx/sites-available/your-site /etc/nginx/sites-enabled/

server {
    listen 80;
    listen [::]:80;
    
    # Replace with your domain name
    server_name example.com www.example.com;
    
    # Document root
    root /var/www/your-site;
    index index.html index.htm index.php;
    
    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    location / {
        try_files $uri $uri/ =404;
    }
    
    # Optional: PHP support (requires php-fpm)
    # location ~ \.php$ {
    #     include snippets/fastcgi-php.conf;
    #     fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
    # }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }
}
EOF
    echo "‚úÖ Server block template created at $TEMPLATE_FILE"
fi

# Test nginx configuration
echo "üß™ Testing Nginx configuration..."
if run_cmd nginx -t; then
    echo "‚úÖ Nginx configuration is valid"
else
    echo "‚ùå Nginx configuration test failed"
    exit 1
fi

# Get server IP for display
SERVER_IP=$(curl --max-time 10 --retry 2 -s -4 ifconfig.me 2>/dev/null || echo "localhost")

echo ""
echo "‚úÖ Nginx setup complete!"
echo "üìä Server details:"
echo "   Version: $(nginx -v 2>&1)"
echo "   Status: $(systemctl is-active nginx)"
echo "   Document root: $NGINX_ROOT"
echo "   Configuration: /etc/nginx/"
echo ""
echo "üåê Your server is accessible at:"
echo "   http://$SERVER_IP"
echo "   http://localhost (if accessing locally)"
echo ""
echo "üí° Next steps:"
echo "   - Place your web files in $NGINX_ROOT"
echo "   - Create custom server blocks in $SITES_AVAILABLE"
echo "   - Use the template at $TEMPLATE_FILE as a starting point"
echo ""